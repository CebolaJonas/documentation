on:
  push:
    branches: [heston/DOCS-8410]
  # schedule:
  #  # At 08:00 on every day-of-week from Monday through Friday.
  #  - cron: '0 8 * * 1-5'

permissions: {}
jobs:
  sdk-versions:
    permissions:
      contents: write # for git push
      pull-requests: write # to create pull request      
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.DOCS_GH_APP_ID }}
          private-key: ${{ secrets.DOCS_GH_APP_PRIVATE_KEY }}
      - id: set-versions
        name: Load latest SDK versions
        uses: actions/github-script@v7
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          result-encoding: string
          script: |
            const clients = [
              'datadog-api-client-go',
              'datadog-api-client-java',
              'datadog-api-client-python',
              'datadog-api-client-ruby',
              'datadog-api-client-typescript',
              'synthetics-worker',
              'integrations-core'
            ]
            const versions = await Promise.all(clients.map(async (repo) => {
              const releases = await github.rest.repos.listReleases({
                owner: 'DataDog',
                repo: repo
              })  
              if (client === 'synthetics-worker') {
                const regex = /^(?:(?:[0-9]*)[.](?:[0-9]*)[.](?:[0-9]*))$/;
                // synthetics-worker must match semver
                return { client: repo, version: releases.data.find(value => regex.test(value))}
              }
              return {client: repo, version: releases.data[0]["tag_name"]}
            }))
            console.log(versions)
            return JSON.stringify(versions)
#      - uses: actions/checkout@v4
#      - name: Write version
#        run: |-
#          echo '${{steps.set-versions.outputs.result}}' | jq > ./data/sdk_versions.json
#          git add ./data/sdk_versions.json
#          git config user.name packages
#          git config user.email packages@datadoghq.com
#          git add .
#          git commit -m "Bump SDK"
#          git push -f origin HEAD:refs/heads/sdk/versions
#      - uses: actions/github-script@v7
#        name: Propose change with latest versions
#        with:
#         github-token: ${{secrets.GITHUB_TOKEN}}
#          result-encoding: string
#          script: |
#            await github.rest.pulls.create({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              title: "[SDK] new versions are available",
#              body: "SSID",
#              head: "sdk/versions",
#              base: "master",
#              maintainer_can_modify: true
#            })
